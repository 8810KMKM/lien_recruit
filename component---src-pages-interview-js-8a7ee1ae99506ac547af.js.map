{"version":3,"sources":["webpack:///./src/components/staffCard.js","webpack:///./src/components/staffCardList.js","webpack:///./src/pages/interview.js","webpack:///./node_modules/core-js/modules/es6.function.name.js","webpack:///./src/components/seo.js"],"names":["StaffCard","_ref","id","number","name","job","word","image","cardClass","classNames","Styles","card","reverse","react_default","a","createElement","gatsby_browser_entry","to","className","components_image","filename","info","info__top","propTypes","PropTypes","string","defaultProps","StaffCardList","map","item","staffCard","InterviewPage","layout","url","seo","title","headline","staffCardList","dP","__webpack_require__","f","FProto","Function","prototype","nameRE","configurable","get","this","match","e","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","content","property","author","concat","arrayOf","object","isRequired"],"mappings":"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","file":"component---src-pages-interview-js-8a7ee1ae99506ac547af.js","sourcesContent":["import React from 'react';\nimport Image from '../components/image';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Styles from '../styles/components/staffCard.module.scss';\nimport { Link } from \"gatsby\";\n\nconst StaffCard = ({id, number, name, job, word, image}) => {\n\n  let cardClass = classNames(Styles.card);\n\n  if (id % 2 == 0) {\n    cardClass = classNames(\n      Styles.card,\n      Styles.reverse\n    );\n  }\n  \n  return (\n    <Link to={`interview/${id}`} className={cardClass}>\n      <div className={Styles.image}>\n        <Image filename={image} />\n      </div>\n      <div className={Styles.info}>\n        <div className={Styles.info__top}>\n          <h3 className={Styles.number}>#{number}</h3>\n          <div>\n            <h3>{name}</h3>\n            <p>{job}</p>\n          </div>\n        </div>\n        <h3 className={Styles.word}>{word}</h3>\n      </div>\n    </Link>\n  )\n}\n\nStaffCard.propTypes = {\n  number: PropTypes.string,\n  name: PropTypes.string,\n  job: PropTypes.string,\n  word: PropTypes.string,\n  image: PropTypes.string,\n}\n\nStaffCard.defaultProps = {\n  number: ``,\n  name: ``,\n  job: ``,\n  word: ``,\n  image: ``,\n}\n\nexport default StaffCard","import React from 'react';\nimport StaffCard from './staffCard';\n// import Styles from '../styles/components/staffCardList.module.scss';\n\nconst StaffCardList = () => {\n  const staffCardItem =[\n    {\n      id: 1,\n      number: '01',\n      name: '林 愛子',\n      job: 'ことね教室 自閉症セラピスト',\n      word: '「家庭と仕事の両立ができ、毎日が充実しています。」',\n      image: 'interview01.jpg'\n    },\n    {\n      id: 2,\n      number: '02',\n      name: '福田　恵莉',\n      job: 'ことね教室 保育士',\n      word: '「先輩方の指導が一つひとつ丁寧で、不安は無くなりました。」',\n      image: 'interview02.jpg'\n    },\n    {\n      id: 3,\n      number: '03',\n      name: '安河内 望月',\n      job: '西徳前教室 保育士',\n      word: '「成長する子どもたちを見て、一緒に喜びを感じることができます。」',\n      image: 'interview03.jpg'\n    },\n    {\n      id: 4,\n      number: '04',\n      name: '宮田 佳香',\n      job: '西徳前教室 作業療法士',\n      word: '「『子育ては皆でやるもの』という言葉を、職場でも大切にしています。」',\n      image: 'interview04.jpg'\n    },\n  ];\n  return (\n    <div>\n      { staffCardItem.map((item) => {\n        return (\n          <StaffCard\n            id={item.id}\n            number={item.number}\n            name={item.name}\n            job={item.job}\n            word={item.word}\n            image={item.image}\n          />\n        )\n      })}\n      \n    </div>\n  )\n}\n\nexport default StaffCardList","import React from \"react\"\n// import { Link } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Headline from '../components/headline';\nimport StaffCardList from \"../components/staffCardList\";\n\n\nconst InterviewPage = () => (\n  <Layout url={\"interview\"}>\n    <SEO title=\"Interview\" />\n    <Headline title=\"STAFF INTERVIEW\" />\n    <StaffCardList />\n  </Layout>\n)\n\nexport default InterviewPage","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}